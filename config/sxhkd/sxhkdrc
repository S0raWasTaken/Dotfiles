#
# wm independent hotkeys
#
alt + m
	ponymix toggle --input --device alsa_input.usb-Solid_State_System_Co._Ltd._GAMING_HEADSETS_000000000000-00.mono-fallback; \
	ponymix is-muted --input --device alsa_input.usb-Solid_State_System_Co._Ltd._GAMING_HEADSETS_000000000000-00.mono-fallback && notify-send "Mute"; \
	ponymix is-muted --input --device alsa_input.usb-Solid_State_System_Co._Ltd._GAMING_HEADSETS_000000000000-00.mono-fallback || notify-send "Unmute"

super + {_, shift + }t
	notify-send "$(crow {$(test), -t pt} -b "`xsel -b -o`")"

alt + @space 
	dunstctl close

# Flashfocus
alt + w
	flash_window

# Spotify volume
alt + {@F3, @F4}
	ponymix --sink-input -d Spotify {decrease, increase} 10

# Playerctl
alt + {@F6, @F7, @F8}
	playerctl --player=spotify {previous, play-pause, next}
{@XF86AudioNext, @XF86AudioPrev, @XF86AudioPlay, @XF86AudioPause}
	playerctl --player=spotify {next, previous, play, pause}

# Brightness
@XF86MonBrightness{Up,Down}
	brightnessctl s 5%{+,-}

# Print
Print
	flameshot gui

# Start/Kill Polybar
alt + {_, shift + }p
	{exec /home/s0ra/.config/polybar/launch.sh, killall polybar}

# terminal emulator
alt + {_, shift + }Return
	bspc rule -a kitty state={tiled,floating}; \
	kitty

# program launcher
alt + d
	rofi -modi drun,run -show drun -show-icons

# make sxhkd reload its configuration files:
alt + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
shift + alt + {e,r}
	bspc {quit,wm -r}

# close and kill
alt + shift + {k,q}
	bspc node -{k,c}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window


#
# state/flags
#

# set the window state
alt + {t,shift + t,shift + @space,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
alt + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
alt + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
alt + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
alt + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {h,j,k,l}
	bspc node -v {-20 0,0 20,0 -20,20 0}
